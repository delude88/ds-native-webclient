name: Nighly for macOS 10.15

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '*.*'

env:
  BUILD_TYPE: Release
  WXVERSION: 3.1.4
  cache-name: cache-wxWidgets

jobs:
  build:
    runs-on: macos-10.15
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install codesign certificates
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.CODESIGN_CERTIFICATE }}
          p12-password: ${{ secrets.CODESIGN_CERTIFICATE_PASSWORD }}
      - name: Install wxwidget dependencies (for int18)
        run: |
          export PATH=$PATH:/usr/local/opt/gettext/bin
          export HOMEBREW_NO_AUTO_UPDATE=1
          set -e
          brew install gettext
          set +e
      - name: Cache wxWidgets
        uses: actions/cache@v2
        with:
          path: |
            wxWidgets_src-${{env.WXVERSION}}
            wxWidgets_build-${{env.WXVERSION}}
          key: ${{ runner.os }}-build-${{env.github_ref}}-${{ env.cache-name }}-4
      - name: Download wxWidgets
        run: |
          if test -d wxWidgets_src-${{env.WXVERSION}}; then
              echo "exWidgets already downloaded"
          else
              wget https://github.com/wxWidgets/wxWidgets/releases/download/v${{env.WXVERSION}}/wxWidgets-${{env.WXVERSION}}.zip
              mkdir wxWidgets_src-${{env.WXVERSION}}
              cd wxWidgets_src-${{env.WXVERSION}}
              unzip ../wxWidgets-${{env.WXVERSION}}.zip
              cd ..
          fi
      - name: Compile wxWidgets
        run: |
          if test -d wxWidgets_build-${{env.WXVERSION}}; then
              echo "wxWidgets already compiled"
          else
              mkdir wxWidgets_build-${{env.WXVERSION}}
              cd wxWidgets_build-${{env.WXVERSION}}
              cmake ../wxWidgets_src-${{env.WXVERSION}} -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"
              cmake --build .
              cd ..
          fi
      - name: Install wxWidgets
        run: |
          cd wxWidgets_build-${{env.WXVERSION}}
          sudo cmake --install .
          cd ..
      - name: Install depedencies using conan
        run: |
          pip3 install wheel setuptools
          pip3 install conan
          conan install -if build --build missing .
      - name: Configure CMake
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCODESIGN_CERTIFICATE_NAME="Developer ID Application: Tobias Hegemann (JH3275598G)"
      - name: Build with CMake
        run: cmake --build build --config Release
      - name: Bundle App
        run: cpack --config build/CPackConfigApp.cmake -B build
      - name: Bundle Service
        run: cpack --config build/CPackConfigService.cmake -B build
      - name: Publish bundle
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/*.dmg,build/*.zip"
          bodyFile: "HOWTO.md"
          commit: "main"
          tag: "Nightly"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}